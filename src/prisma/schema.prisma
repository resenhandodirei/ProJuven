generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/**
 * ===== ENUMS =====
 */

enum TipoDePerfilEnum {
  ADMIN
  DEFENSOR
  PSICOSSOCIAL
  SERVIDOR
  ESTAGIARIO
}

enum TipoCrime {
  PATRIMONIO
  VIDA
  HONRA
  DROGAS
  ARMAS
  SEXUAL
  OUTROS
}

enum Parentesco {
  MAE
  PAI
  IRMA
  IRMAO
  TIOS
  AVOS
  NORA
  CUNHADO
  OUTROS
}

enum PessoaQueAtendeu {
  DEFENSOR_RUBENS      @map("Defensor Dr. Rubens")
  DEFENSORA_LUCIANA    @map("Defensora Dra. Luciana")
  DEFENSORA_ANDREIA    @map("Defensora Dra. Andreia")
  ASSESSOR_PEDRO       @map("Assessor jurídico Dr. Pedro")
  ESTAGIARIO_ALEX      @map("Estagiário Alex")
  ESTAGIARIO_ALAN      @map("Estagiário Alan")
  ESTAGIARIA_GABRIELLE @map("Estagiária Gabrielle")
  ESTAGIARIO_GUSTAVO   @map("Estagiário Gustavo Cícero")
  ESTAGIARIA_LARISSA   @map("Estagiária Larissa Corrêa")
  ESTAGIARIO_MARCOS    @map("Estagiário Marcos")
  ESTAGIARIA_RAYANE    @map("Estagiária Rayane")
  ESTAGIARIA_THAYNA    @map("Estagiária Thayná Evelyn")
}

enum DefensorResponsavel {
  DEFENSOR_RUBENS    @map("Defensor Dr. Rubens")
  DEFENSORA_LUCIANA  @map("Defensora Dra. Luciana")
  DEFENSORA_ANDREIA  @map("Defensora Dra. Andreia")
}

enum TipoDeficiencia {
  VISUAL
  AUDITIVA
  MOTORA
  INTELECTUAL
  ADL
  OUTRAS
}

enum FaixaRenda {
  ATE_600
  DE_600_A_1212
  DE_1212_A_2424
  DE_2424_A_3636
  DE_3636_A_6060
  DE_6060_A_12120
  DE_12120_A_24240
  MAIS_24240
}

enum OrigemRenda {
  FORMAL
  INFORMAL
  APOSENTADORIA
  PROGRAMAS_SOCIAIS
  ALUGUEL
  ALIMENTICIA
  CRIMES
  TRAFICO
  OUTRAS
}

enum EscolaridadeStatus {
  ATIVO
  INATIVO
}

enum EscolaridadeEnum {
  ANALFABETO
  SEMIANALFABETO
  FUNDAMENTAL_INCOMPLETO
  FUNDAMENTAL_COMPLETO
  MEDIO_INCOMPLETO
  MEDIO_COMPLETO
  TECNICO
  SUPERIOR
}

/**
 * ===== MODELS =====
 */

model Login {
  id           Int              @id @default(autoincrement())
  nome         String
  genero       String?
  tipoDePerfil TipoDePerfilEnum
  email        String           @unique
  senha        String
  ativo        Boolean          @default(true)

  fichas              Ficha[]                  @relation("CriadorFicha")
  prontuariosJuridico ProntuarioJuridico[]     @relation("CriadorProntuarioJuridico")
  prontuariosPsico    ProntuarioPsicossocial[] @relation("CriadorProntuarioPsicossocial")
  atendimentosComoAtendente Atendimento[]      @relation("Atendente")
  atendimentosComoDefensor  Atendimento[]      @relation("DefensorResponsavel")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Ficha {
  id                 String   @id @default(uuid())
  nomeAtendido       String
  nomeFamiliar       String?
  cpf                String?
  rg                 String?
  dataNascimento     DateTime?
  qtdProcesso        Int?
  numeroProcesso     String?
  varaProcesso       String?
  telefonesContato   String[]
  nomeResponsavel    String?
  documentoResponsavel String?
  endereco           String?

  idUsuarioCriador Int
  criador          Login @relation("CriadorFicha", fields: [idUsuarioCriador], references: [id])

  defensorResponsavelId Int
  defensorResponsavel   Login @relation("DefensorResponsavel", fields: [defensorResponsavelId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  ProntuarioJuridico     ProntuarioJuridico[]
  ProntuarioPsicossocial ProntuarioPsicossocial[]
}

model Jovem {
  id             Int       @id @default(autoincrement())
  nome           String
  dataNascimento DateTime
  criadoEm       DateTime  @default(now())
  atualizadoEm   DateTime  @updatedAt

  processos      Processo[]
  familiares     Familiar[]
  atendimentos   Atendimento[]
  deficiencias   Deficiencia[]
  rendas         Renda[]
  escolaridade   Escolaridade[]
}

model Processo {
  id          Int        @id @default(autoincrement())
  jovemId     Int
  jovem       Jovem      @relation(fields: [jovemId], references: [id], onDelete: Cascade)
  numero      String
  tipoCrime   TipoCrime
  descricao   String?
  criadoEm    DateTime   @default(now())
  atendimentos Atendimento[]
}

model Familiar {
  id                   Int        @id @default(autoincrement())
  jovemId              Int
  jovem                Jovem      @relation(fields: [jovemId], references: [id], onDelete: Cascade)
  nome                 String
  parentesco           Parentesco
  responsavelPrincipal Boolean   @default(false)
  contatos             ContatoFamiliar[]
}

model ContatoFamiliar {
  id          Int      @id @default(autoincrement())
  familiarId  Int
  familiar    Familiar @relation(fields: [familiarId], references: [id], onDelete: Cascade)
  telefone    String
  parentesco  Parentesco?
}

model Atendimento {
  id                  Int                 @id @default(autoincrement())
  processoId          Int
  processo            Processo            @relation(fields: [processoId], references: [id], onDelete: Cascade)
  pessoaQueAtendeu    PessoaQueAtendeu
  defensorResponsavel DefensorResponsavel
  criadoEm            DateTime            @default(now())
  atualizadoEm        DateTime            @updatedAt

  saudeMental   SaudeMental?
  violencia     Violencia?
}

model Deficiencia {
  id      Int             @id @default(autoincrement())
  jovemId Int
  jovem   Jovem           @relation(fields: [jovemId], references: [id])
  tipo    TipoDeficiencia
}

model Renda {
  id      Int          @id @default(autoincrement())
  jovemId Int
  jovem   Jovem        @relation(fields: [jovemId], references: [id])
  faixa   FaixaRenda
  origens RendaOrigem[]
}

model RendaOrigem {
  id       Int         @id @default(autoincrement())
  rendaId  Int
  renda    Renda       @relation(fields: [rendaId], references: [id])
  origem   OrigemRenda
}

model Escolaridade {
  id           Int                 @id @default(autoincrement())
  jovemId      Int
  jovem        Jovem               @relation(fields: [jovemId], references: [id])
  status       EscolaridadeStatus
  tempoInativo Int?
  nivel        EscolaridadeEnum?
}

model SaudeMental {
  id                Int              @id @default(autoincrement())
  atendimentoId     Int
  atendimento       Atendimento      @relation(fields: [atendimentoId], references: [id])
  status            Boolean
  momento           MomentoSaudeMental[]
  usoDrogas         Boolean
  frequenciaDrogas  FrequenciaDrogas?
  tiposDrogas       SaudeMentalDroga[]
  tentativaSuicidio TentativaSuicidio
  momentoSuicidio   MomentoSuicidio[]
  formaSuicidio     FormaSuicidio[]
}

model SaudeMentalDroga {
  id             Int        @id @default(autoincrement())
  saudeMentalId  Int
  saudeMental    SaudeMental @relation(fields: [saudeMentalId], references: [id])
  droga          TipoDroga
}

model Violencia {
  id                Int             @id @default(autoincrement())
  atendimentoId     Int
  atendimento       Atendimento     @relation(fields: [atendimentoId], references: [id])
  violenciaUrbana   AgenteViolenciaUrbana[]
  riscoAmeaca       Boolean
  institucional     AgenteViolenciaInstitucional[]
  formaInstitucional FormaViolenciaInstitucional[]
  localInstitucional UnidadeInternacao?
  descricao         String?
  qtdIncidentes     Int?
}

/**
 * ===== PRONTUÁRIOS =====
 */

model ProntuarioJuridico {
  id String @id @default(uuid())

  idUsuarioCriador Int
  criador          Login @relation("CriadorProntuarioJuridico", fields: [idUsuarioCriador], references: [id])

  fichaId String?
  ficha   Ficha?  @relation(fields: [fichaId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("prontuario_juridico")
}

model ProntuarioPsicossocial {
  id String @id @default(uuid())

  idUsuarioCriador Int
  criador          Login @relation("CriadorProntuarioPsicossocial", fields: [idUsuarioCriador], references: [id])

  fichaId String?
  ficha   Ficha?  @relation(fields: [fichaId], references: [id])

  avaliacaoInicial  String?
  historicoFamiliar String?
  observacoes       String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("prontuario_psicossocial")
}
